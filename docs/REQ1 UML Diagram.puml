@startuml

'Properties & Settings
skinparam linetype ortho
set namespaceSeparator none
'!theme reddress-darkblue
'hide circle

package engine {
    abstract class Actor <<abstract>>
    abstract class Ground <<abstract>>
    abstract class WeaponItem <<abstract>>
    abstract class Action <<abstract>>
}

package game {
    ' Behaviours
    package behaviour {
        interface IBehaviour <<interface>>
        class WanderBehaviour
        class FollowBehaviour
    }

    ' Enemies
    package enemies {
        abstract class Enemy <<abstract>>
        interface IEnemy <<interface>>
        class HeavySkeletalSwordsman
        class LoneWolf
        class GiantCrab
    }

    ' Weapons
    package items {
        'class Rune
        'class Uchigatana
        'class GreatKnife
        'class Club
        class Grossmesser
    }

    ' Actions
    package actions {
        class DespawnAction
        class DeathAction
        class AttackAction
    }

    ' Environments
    package environments {
        abstract class Environment <<abstract>>
        interface IEnvironment <<interface>>
        class Graveyard
        class GustOfWind
        class PuddleOfWater
    }

    ' Utils
    package utils {
        class Random
    }

    ' Driver
    class Application
}

' ==================== Associations ---> ====================

' The environment sets the behaviour
Environment --> IBehaviour : sets

' The Heavy Skeletal Swordsman has a chance to drop a Grossmesser
HeavySkeletalSwordsman --> "1" Grossmesser : drops

' WeaponItem associations
AttackAction -[#green]-> WeaponItem : uses
Grossmesser -up[#green]-> WeaponItem

' Actor associations
AttackAction "1" -[#purple]-> "1" Actor : <font color="purple">tracks</font>
DeathAction "1" -[#purple]-> "1" Actor : <font color="purple">tracks</font>
FollowBehaviour -[#purple]-> Actor : <font color="purple">targets</font>

' Action associations
AttackAction -[#orange]-> Action
DeathAction -[#orange]-> Action
DespawnAction -[#orange]-> Action


' ==================== Dependencies ...> ====================

' The application creates the enemies
'Application ..> HeavySkeletalSwordsman
'Application ..> LoneWolf
'Application ..> GiantCrab
Application ....> Enemy

' The application creates the environments
'Application ..> Graveyard
'Application ..> GustOfWind
'Application ..> PuddleOfWater
Application ....> Environment

' The enemies have actions
HeavySkeletalSwordsman .[#blue].> AttackAction
LoneWolf .[#blue].> AttackAction
GiantCrab .[#blue].> AttackAction
HeavySkeletalSwordsman .[#red].> DespawnAction
LoneWolf .[#red].> DespawnAction
GiantCrab .[#red].> DespawnAction

' Death occurs when after an attack
AttackAction ..> DeathAction

' Environments and Random
Environment ..> Random

' The Environment spawns different types of enemies
Environment ...> Enemy

' AttackAction uses Random
AttackAction ..> Random


' ==================== Generalisations ---|> ====================

' Actor is generalised by Enemy
Enemy -left--|> Actor

' Ground is generalised by Environment
Environment --|> Ground

' Enemy is generalised by the different enemies
HeavySkeletalSwordsman --|> Enemy
LoneWolf --|> Enemy
GiantCrab --|> Enemy

' Environment is generalised by the different environments
Graveyard --|> Environment
GustOfWind --|> Environment
PuddleOfWater --|> Environment


' ==================== Realisations ...|> ====================

' IEnemy is realised by Enemy
Enemy ..|> IEnemy

' IBehaviour is realised by the various behaviours
WanderBehaviour ..|> IBehaviour
FollowBehaviour ..|> IBehaviour

' IEnvironment is realised by Environment
Environment ..|> IEnvironment


@enduml