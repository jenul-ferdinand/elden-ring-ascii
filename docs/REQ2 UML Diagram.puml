@startuml

skinparam linetype ortho
set namespaceSeparator none
'hide circle

package engine {
    abstract class Actor <<abstract>>
    abstract class WeaponItem <<abstract>>
    interface Action <<interface>>
}

package game {

    package enemies {
        abstract class Enemy <<abstract>>
        class HeavySkeletalSwordsman
        class LoneWolf
        class GiantCrab
    }

    package traders {
        abstract class Trader <<abstract>>
        class MerchantKale
    }

    package actions {
        class PurchaseAction
        class DeathAction
        class AttackAction
        class ConsumeAction
        class PurchaseAction
        class SellAction
    }

    package items {
        interface Consumables <<interface>>

        class Rune
        class Grossmesser
        class Club
    }

    package utils {
        class RandomNumberGenerator
    }

    ' Player
    class Player

    ' Driver Class
    class Application
}




    ' ========== Generalisations (Parent/Child) ==========

    MerchantKale --|> Trader

    Trader --|> Actor

    HeavySkeletalSwordsman -[#blue]-|> Enemy
    LoneWolf -[#blue]-|> Enemy
    GiantCrab -[#blue]-|> Enemy

    Club -[#green]-|> WeaponItem
    Grossmesser -[#green]-|> WeaponItem

    PurchaseAction --|> Action
    SellAction --|> Action






    ' ========== Realisations (Interfaces) ==========

    ' Runes are consumable
    Rune ..|> Consumables






    ' ========== Associations ==========

    ' MerchantKale who trades weapons
    MerchantKale "1" --> "0..*" Club : transacts
    MerchantKale "1" --> "0..*" Grossmesser : buys

    ' Enemies dropping Runes
    DeathAction "0..*" ---> "1" Rune : drops




    ' ========== Dependencies ==========

    ' Application creates MerchantKale
    Application ..> MerchantKale


    AttackAction ..> DeathAction

    RandomNumberGenerator ..> HeavySkeletalSwordsman
    RandomNumberGenerator ..> GiantCrab
    RandomNumberGenerator ..> LoneWolf


    ' Rune adds to the Player's runes balance
    Rune ..> Player

    ' Player interacts with MerchantKale
    MerchantKale ..> Player

    ' MerchantKale creates a PurchaseAction
    MerchantKale ..> PurchaseAction

    PurchaseAction ..> WeaponItem
    SellAction ..> WeaponItem
    SellAction ..> Player
    PurchaseAction ..> Player

    MerchantKale ..> SellAction
}

@enduml
